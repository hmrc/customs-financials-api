# Copyright 2022 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName=customs-financials-api

play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"
play.modules.enabled += "config.Module"
play.modules.enabled += "config.SchedulerModule"

# Play Modules
# ~~~~
# Additional play modules can be added here

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="QLt1ZUogOChlQXAAUkuiG0UYqH6vDdcjCUTrin9zd3vz1bmQ4ysaCBcXn4mWEIoE"

# Session configuration
# ~~~~~
application.session.httpOnly=false
application.session.secure=false

# The application languages
# ~~~~~

play.i18n.langs=["en"]

play.http.router=prod.Routes

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}

auditing {
    enabled=true
    consumer {
        baseUri {
            host = localhost
            port = 8100
        }
    }
}
# FileUploadScheduler
fileUploadPerInstancePerSecond = 5

housekeepingHours = 12

fileUploadMaxAgeMins = 30

fileUploadFailCount = 5

# Microservice specific config

microservice {
    metrics {
        graphite {
            host = graphite
            port = 2003
            prefix = play.${appName}.
            enabled = false
        }
    }

    services {

        customs-data-store {
            host = localhost
            port = 9893
            context-base = "/customs-data-store"
            server-token = "secret-token"
        }

        acc24 {
            host = localhost
            port = 9753
            context-base = "/customs-financials-hods-stub"
            bearer-token = "test1234567"
            serviceName="hods-acc24"
        }

        acc27 {
            host = localhost
            port = 9753
            context-base = "/customs-financials-hods-stub"
            bearer-token = "test1234567"
            endpoint = "/accounts/getaccountsandbalances/v1"
            serviceName="hods-acc27"
        }

        acc29 {
            host = localhost
            port = 9753
            context-base = "/customs-financials-hods-stub"
            bearer-token = "test1234567"
            serviceName="hods-acc29"
        }

        acc28 {
            host = localhost
            port = 9753
            context-base = "/customs-financials-hods-stub"
            bearer-token = "test1234567"
            serviceName="hods-acc28"
        }

        acc30 {
            host = localhost
            port = 9753
            context-base = "/customs-financials-hods-stub"
            bearer-token = "test1234567"
            serviceName="hods-acc30"
        }

        acc31 {
            host = localhost
            port = 9753
            context-base = "/customs-financials-hods-stub"
            bearer-token = "test1234567"
            serviceName="hods-acc31"
        }

        acc38 {
            host = localhost
            port = 9753
            context-base = "/customs-financials-hods-stub"
            bearer-token = "test1234567"
            serviceName="hods-acc38"
        }

        acc37 {
            host = localhost
            port = 9753
            context-base = "/customs-financials-hods-stub"
            bearer-token = "test1234567"
            serviceName = "hods-acc37"
        }

        acc40 {
            host = localhost
            port = 9753
            context-base = "/customs-financials-hods-stub"
            bearer-token = "test1234567"
            serviceName = "hods-acc40"
        }

        acc41 {
            host = localhost
            port = 9753
            context-base = "/customs-financials-hods-stub"
            bearer-token = "test1234567"
            serviceName = "hods-acc41"
        }

        sub21 {
            host = localhost
            port = 9753
            context-base = "/customs-financials-hods-stub"
            historicEoriEndpoint = "/subscriptions/geteorihistory/v1"
            bearer-token = "test1234567"
            serviceName = "hods-sub21"
        }

        sub09 {
            host = localhost
            port = 9753
            context-base = "/customs-financials-hods-stub"
            subscriptionEndpoint = "/subscriptions/subscriptiondisplay/v1"
            bearer-token = "test1234567"
            serviceName = "hods-sub09"
        }

        tpi01 {
            host = localhost
            port = 9753
            context-base = "/customs-financials-hods-stub"
            endpoint = "/tpi/getreimbursementclaims/v1"
            bearer-token = "test1234567"
            serviceName = "hods-tpi01"
        }

        tpi02 {
            host = localhost
            port = 9753
            context-base = "/customs-financials-hods-stub"
            endpoint = "/tpi/getspecificclaim/v1"
            bearer-token = "test1234567"
            serviceName = "hods-tpi02"
        }

        email {
          host = localhost
          port = 8300
        }

        customs-financials-email-throttler {
            host = localhost
            port = 9872
            context-base = "/customs-financials-email-throttler"
        }

        auth {
            host = localhost
            port = 8500
        }

        datastream {
            host=localhost
            port=8100
        }

        dec64 {
            host = localhost
            port = 9753
            context-base = "/customs-financials-hods-stub"
            endpoint = "/filetransfer/init/v1"
            bearer-token = "test1234567"
        }
    }
}

mongodb {
    uri = "mongodb://localhost:27017/customs-financials-api"
    timeToLiveInSeconds = 2592000  #30x24x60x60 = 2592000
}

features {
    onlyOpenItems = true
}